<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    mc:Ignorable="d">
    <!--  ReSharper disable Xaml.MissingGridIndex  -->

    <!--  *********************************  RESOURCES  *********************************  -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Theme.Shared.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  *********************************  TextBlock Style  *********************************  -->
    <Style TargetType="TextBlock">
        <Setter Property="FontFamily" Value="../Fonts/#Lato" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    </Style>

    <Style x:Key="HeaderStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="../Fonts/#Lato" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    </Style>

    <!--  *********************************  Hyperlink Style  *********************************  -->
    <Style TargetType="Hyperlink">
        <Setter Property="Foreground" Value="Aquamarine" />
    </Style>

    <!--  *********************************  ScrollBar Style  *********************************  -->
    <ControlTemplate x:Key="ScrollThumbTemplate" TargetType="Thumb">
        <Border Background="Transparent">
            <Border
                x:Name="ButtonIcon"
                Margin="{TemplateBinding Padding}"
                Background="{StaticResource ScrollButton}"
                CornerRadius="3" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonIcon" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonIcon" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollButtonMouseOver}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonIcon" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollButtonMouseOver}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="LargeStepButtonTemplate" TargetType="RepeatButton">
        <Rectangle Fill="Transparent" />
    </ControlTemplate>
    <ControlTemplate x:Key="HorizontalSmallIncreaseTemplate" TargetType="RepeatButton">
        <Border Padding="{TemplateBinding Padding}" Background="Transparent">
            <Path
                x:Name="ButtonIcon"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="M0,0 L6,3.5 0,7Z"
                Fill="{StaticResource ScrollButton}"
                Stretch="None"
                StrokeThickness="0" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonIcon" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollButtonMouseOver}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonIcon" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollButtonMouseOver}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="ButtonIcon"
                                Storyboard.TargetProperty="Opacity"
                                To="0.27"
                                Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="HorizontalSmallDecreaseTemplate" TargetType="RepeatButton">
        <Border Padding="{TemplateBinding Padding}" Background="Transparent">
            <Path
                x:Name="ButtonIcon"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="M6,0 L0,3.5 6,7Z"
                Fill="{StaticResource ScrollButton}"
                Stretch="None"
                StrokeThickness="0" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonIcon" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollButtonMouseOver}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonIcon" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollButtonMouseOver}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="ButtonIcon"
                                Storyboard.TargetProperty="Opacity"
                                To="0.27"
                                Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="VerticalSmallDecreaseTemplate" TargetType="RepeatButton">
        <Border Padding="{TemplateBinding Padding}" Background="Transparent">
            <Path
                x:Name="ButtonIcon"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="M0,6 L3.5,0 7,6Z"
                Fill="{StaticResource ScrollButton}"
                Stretch="None"
                StrokeThickness="0" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonIcon" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollButtonMouseOver}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonIcon" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollButtonMouseOver}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="ButtonIcon"
                                Storyboard.TargetProperty="Opacity"
                                To="0.27"
                                Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="VerticalSmallIncreaseTemplate" TargetType="RepeatButton">
        <Border Padding="{TemplateBinding Padding}" Background="Transparent">
            <Path
                x:Name="ButtonIcon"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="M0,0 L3.5,6 7,0Z"
                Fill="{StaticResource ScrollButton}"
                Stretch="None"
                StrokeThickness="0" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonIcon" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollButtonMouseOver}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonIcon" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollButtonMouseOver}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="ButtonIcon"
                                Storyboard.TargetProperty="Opacity"
                                To="0.27"
                                Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="HorizontalScrollBarControlTemplate" TargetType="ScrollBar">
        <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <RepeatButton
                    x:Name="HorizontalSmallDecrease"
                    Grid.Column="0"
                    Width="18"
                    MinHeight="0"
                    Padding="0,0,0,1"
                    Command="{x:Static ScrollBar.LineLeftCommand}"
                    FocusVisualStyle="{x:Null}"
                    Focusable="False"
                    Interval="50"
                    IsTabStop="False"
                    Template="{StaticResource HorizontalSmallDecreaseTemplate}" />
                <Track x:Name="PART_Track" Grid.Column="1">
                    <Track.Resources>

                        <!--  Thumb's minimum width is half of this metric  -->
                        <system:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}">36</system:Double>
                    </Track.Resources>
                    <Track.DecreaseRepeatButton>
                        <RepeatButton
                            x:Name="HorizontalLargeDecrease"
                            Command="{x:Static ScrollBar.PageLeftCommand}"
                            FocusVisualStyle="{x:Null}"
                            Interval="50"
                            IsTabStop="False"
                            Template="{StaticResource LargeStepButtonTemplate}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton
                            x:Name="HorizontalLargeIncrease"
                            Command="{x:Static ScrollBar.PageRightCommand}"
                            FocusVisualStyle="{x:Null}"
                            Interval="50"
                            IsTabStop="False"
                            Template="{StaticResource LargeStepButtonTemplate}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                            x:Name="HorizontalThumb"
                            Padding="0,5,0,6"
                            Template="{StaticResource ScrollThumbTemplate}" />
                    </Track.Thumb>
                </Track>
                <RepeatButton
                    x:Name="HorizontalSmallIncrease"
                    Grid.Column="2"
                    Width="18"
                    MinHeight="0"
                    Padding="0,0,0,1"
                    Command="{x:Static ScrollBar.LineRightCommand}"
                    FocusVisualStyle="{x:Null}"
                    Focusable="False"
                    Interval="50"
                    IsTabStop="False"
                    Template="{StaticResource HorizontalSmallIncreaseTemplate}" />
            </Grid>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="VerticalScrollBarControlTemplate" TargetType="ScrollBar">
        <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <RepeatButton
                    x:Name="VerticalSmallDecrease"
                    Height="18"
                    MinHeight="0"
                    Padding="0,0,1,0"
                    Command="{x:Static ScrollBar.LineUpCommand}"
                    FocusVisualStyle="{x:Null}"
                    Focusable="False"
                    Interval="50"
                    IsTabStop="False"
                    Template="{StaticResource VerticalSmallDecreaseTemplate}" />
                <Track
                    x:Name="PART_Track"
                    Grid.Row="1"
                    IsDirectionReversed="true">
                    <Track.Resources>

                        <!--  Thumb's minimum height is half of this metric  -->
                        <system:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">36</system:Double>
                    </Track.Resources>
                    <Track.DecreaseRepeatButton>
                        <RepeatButton
                            x:Name="VerticalLargeDecrease"
                            Command="{x:Static ScrollBar.PageUpCommand}"
                            FocusVisualStyle="{x:Null}"
                            Interval="50"
                            IsTabStop="False"
                            Template="{StaticResource LargeStepButtonTemplate}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton
                            x:Name="VerticalLargeIncrease"
                            Command="{x:Static ScrollBar.PageDownCommand}"
                            FocusVisualStyle="{x:Null}"
                            Interval="50"
                            IsTabStop="False"
                            Template="{StaticResource LargeStepButtonTemplate}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                            x:Name="VerticalThumb"
                            Padding="5,0,6,0"
                            Template="{StaticResource ScrollThumbTemplate}" />
                    </Track.Thumb>
                </Track>
                <RepeatButton
                    x:Name="VerticalSmallIncrease"
                    Grid.Row="2"
                    Height="18"
                    MinHeight="0"
                    Padding="0,0,1,0"
                    Command="{x:Static ScrollBar.LineDownCommand}"
                    FocusVisualStyle="{x:Null}"
                    Focusable="False"
                    Interval="50"
                    IsTabStop="False"
                    Template="{StaticResource VerticalSmallIncreaseTemplate}" />
            </Grid>
        </Border>
    </ControlTemplate>
    <Style x:Key="ScrollBarStyle" TargetType="ScrollBar">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="MinWidth" Value="18" />
        <Setter Property="MinHeight" Value="18" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Background" Value="{StaticResource ScrollBarBackground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template" Value="{StaticResource VerticalScrollBarControlTemplate}" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBarControlTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  *********************************  ScrollViewer Style *********************************  -->
    <ControlTemplate x:Key="ScrollViewerControlTemplate" TargetType="ScrollViewer">
        <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ScrollContentPresenter
                    x:Name="PART_ScrollContentPresenter"
                    Margin="{TemplateBinding Padding}"
                    CanContentScroll="{TemplateBinding CanContentScroll}"
                    Content="{TemplateBinding Content}"
                    ContentTemplate="{TemplateBinding ContentTemplate}" />
                <Rectangle
                    Grid.Row="1"
                    Grid.Column="1"
                    Fill="{StaticResource ScrollBarBackground}" />
                <ScrollBar
                    x:Name="PART_VerticalScrollBar"
                    Grid.Row="0"
                    Grid.Column="1"
                    IsTabStop="False"
                    Maximum="{TemplateBinding ScrollableHeight}"
                    Minimum="0"
                    Orientation="Vertical"
                    ViewportSize="{TemplateBinding ViewportHeight}"
                    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                    Value="{TemplateBinding VerticalOffset}" />
                <ScrollBar
                    x:Name="PART_HorizontalScrollBar"
                    Grid.Row="1"
                    Grid.Column="0"
                    IsTabStop="False"
                    Maximum="{TemplateBinding ScrollableWidth}"
                    Minimum="0"
                    Orientation="Horizontal"
                    ViewportSize="{TemplateBinding ViewportWidth}"
                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                    Value="{TemplateBinding HorizontalOffset}" />
            </Grid>
        </Border>
    </ControlTemplate>

    <Style x:Key="ScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{StaticResource ScrollViewerControlTemplate}" />
    </Style>

    <!--  *********************************  TabItem Styles  *********************************  -->
    <Style x:Key="CardListTabsVertical" TargetType="TabItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <BulletDecorator
                        x:Name="Decorator"
                        Margin="0,0,0,2"
                        Cursor="Hand">
                        <BulletDecorator.LayoutTransform>
                            <RotateTransform Angle="270" />
                        </BulletDecorator.LayoutTransform>
                        <Border
                            Name="Border"
                            Margin="0"
                            Background="{StaticResource Brush07}"
                            BorderBrush="White"
                            BorderThickness="1,1,1,1"
                            CornerRadius="3,3,3,3">
                            <ContentPresenter
                                x:Name="ContentSite"
                                Margin="10,1,10,2"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center">
                                <ContentPresenter.Content>
                                    <TextBlock
                                        FontWeight="DemiBold"
                                        Foreground="{StaticResource CardTabBrush}"
                                        Text="{TemplateBinding Header}" />
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </Border>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True" />
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
                            <Setter TargetName="ContentSite" Property="TextBlock.Foreground" Value="Gray" />
                            <Setter TargetName="Decorator" Property="Margin" Value="4,0,0,2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CardListTabsHorizontal" TargetType="TabItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <BulletDecorator
                        x:Name="Decorator"
                        Margin="0,0,0,2"
                        Cursor="Hand">
                        <Border
                            Name="Border"
                            Margin="0"
                            Background="{StaticResource Brush07}"
                            BorderBrush="White"
                            BorderThickness="1,1,1,1"
                            CornerRadius="3,3,3,3">
                            <ContentPresenter
                                x:Name="ContentSite"
                                Margin="10,1,10,2"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Header}">
                            </ContentPresenter>
                        </Border>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True" />
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
                            <Setter TargetName="ContentSite" Property="TextBlock.Foreground" Value="Gray" />
                            <Setter TargetName="Decorator" Property="Margin" Value="4,0,0,2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Slider Style  *********************************  -->
    <Style x:Key="CustomThumbForSlider" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Ellipse
                        Width="10"
                        Height="10"
                        Fill="MediumAquamarine" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyCustomStyleForSlider" TargetType="{x:Type Slider}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Border
                                x:Name="TrackBackground"
                                Grid.Row="0"
                                Height="4.0"
                                Margin="5,0"
                                BorderThickness="1"
                                CornerRadius="1">
                                <Canvas Margin="-6,-1">
                                    <Rectangle
                                        x:Name="PART_SelectionRange"
                                        Height="4.0"
                                        Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                        Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                                        StrokeThickness="1.0" />
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Row="0">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Height="4" Command="{x:Static Slider.DecreaseLarge}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Height="4" Command="{x:Static Slider.IncreaseLarge}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Style="{StaticResource CustomThumbForSlider}" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Context Menu Style  *********************************  -->
    <Style x:Key="NotifyContextStyle" TargetType="{x:Type ContextMenu}">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource WindowBorderBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border Uid="Border_93">
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Tag" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="True">
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="Padding" Value="0,0,5,5" />
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <DropShadowEffect
                                                    BlurRadius="4"
                                                    Opacity="0.8"
                                                    ShadowDepth="1" />
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Border
                            Uid="Border_50"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer
                                Uid="ScrollViewer_9"
                                CanContentScroll="True"
                                Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,
                                                                              TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <ItemsPresenter
                                    Uid="ItemsPresenter_5"
                                    Margin="{TemplateBinding Padding}"
                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ComboBoxToggleButton Style   *********************************  -->
    <Style x:Key="ComboBoxToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="FontFamily" Value="/Shared;Component/Fonts/#Lato" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ComboBoxToggleButtonBorderBrush}" />
        <Setter Property="Background" Value="{StaticResource ComboBoxToggleButtonBackgroundBrush}" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="20" />
                        </Grid.ColumnDefinitions>
                        <Rectangle
                            x:Name="Bd"
                            Grid.ColumnSpan="2"
                            Fill="{TemplateBinding Background}"
                            Stroke="{TemplateBinding BorderBrush}"
                            StrokeThickness="{TemplateBinding BorderThickness}" />
                        <Grid Grid.Column="1">
                            <Rectangle
                                Width="1"
                                Margin="-1,5,0,5"
                                HorizontalAlignment="Left"
                                Fill="{StaticResource ComboBoxToggleButtonDropDownSeparatorBackgroundBrush}" />
                            <Path
                                x:Name="Arrow"
                                Width="10"
                                Height="6"
                                Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "
                                Fill="{StaticResource GlyphBackgroundBrush}"
                                Stretch="Fill" />
                            <Path
                                x:Name="ArrowSelected"
                                Width="10"
                                Height="6"
                                Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "
                                Fill="{StaticResource GlyphPressedBackgroundBrush}"
                                Stretch="Fill"
                                Visibility="Collapsed" />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="Arrow"
                                            Storyboard.TargetProperty="Fill"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="Fill"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxToggleButtonHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="Stroke"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxToggleButtonHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="Arrow"
                                            Storyboard.TargetProperty="Fill"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="Arrow"
                                            Storyboard.TargetProperty="Fill"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphDisabledBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ArrowSelected" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ComboBoxItem Style  *********************************  -->
    <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="FontFamily" Value="/Shared;Component/Fonts/#Lato" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Padding" Value="6,0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid Background="{TemplateBinding Background}">
                        <Rectangle Fill="{StaticResource TransparentBrush}" />
                        <Rectangle
                            x:Name="fillColor"
                            Fill="{StaticResource ComboBoxItemHoverBackgroundBrush}"
                            IsHitTestVisible="False"
                            Opacity="0"
                            Stroke="{StaticResource ComboBoxItemHoverBorderBrush}"
                            StrokeThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle
                            x:Name="CheckedBd"
                            Fill="{StaticResource ComboBoxItemPressedBackgroundBrush}"
                            IsHitTestVisible="False"
                            Stroke="{StaticResource ComboBoxItemPressedBorderBrush}"
                            StrokeThickness="{TemplateBinding BorderThickness}"
                            Visibility="Collapsed" />
                        <ContentControl
                            x:Name="contentControl"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <ContentControl
                            x:Name="contentControl1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Foreground="{StaticResource ForegroundBrush}"
                            Visibility="Collapsed">
                            <ContentPresenter x:Name="contentPresenter1" />
                        </ContentControl>
                        <Rectangle
                            x:Name="FocusVisualElement"
                            Stroke="{StaticResource ComboBoxItemPressedBackgroundBrush}"
                            StrokeThickness="2"
                            Visibility="Collapsed" />
                        <Rectangle
                            x:Name="DisabledVisualElement"
                            Fill="{StaticResource DisabledVisualElement}"
                            Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="fillColor"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="contentControl"
                                            Storyboard.TargetProperty="Foreground"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedBd" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentControl1" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="contentControl1"
                                            Storyboard.TargetProperty="Foreground"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="LayoutStates">
                                <VisualState x:Name="AfterLoaded" />
                                <VisualState x:Name="BeforeLoaded" />
                                <VisualState x:Name="BeforeUnloaded" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ButtonStyle  *********************************  -->
    <Style x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="FontFamily" Value="/Shared;Component/Fonts/#Lato" />
        <Setter Property="Padding" Value="10,0,10,2" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Rectangle
                            x:Name="Bd"
                            Fill="{StaticResource ButtonBackgroundBrush}"
                            Stroke="{StaticResource ButtonBorderBrush}"
                            StrokeThickness="1" />
                        <ContentControl
                            x:Name="ContentControl"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <Rectangle
                            x:Name="FocusedVisualElement"
                            Stroke="{StaticResource ButtonPressedBorderBrush}"
                            StrokeThickness="2"
                            Visibility="Collapsed" />
                        <Rectangle
                            x:Name="DisabledVisualElement"
                            Fill="{StaticResource DisabledVisualElement}"
                            Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="ContentControl"
                                            Storyboard.TargetProperty="Foreground"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="ContentControl"
                                            Storyboard.TargetProperty="Foreground"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ComboBoxEditableTextBox Style  *********************************  -->
    <Style x:Key="ComboBoxEditableTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="FontFamily" Value="/Shared;Component/Fonts/#Lato" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Padding" Value="6,4" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SelectionBrush" Value="{StaticResource TextBoxFocusedBrush}" />
        <Setter Property="SelectionOpacity" Value="0.4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer
                        x:Name="PART_ContentHost"
                        Background="Transparent"
                        Focusable="false"
                        HorizontalScrollBarVisibility="Hidden"
                        Style="{StaticResource ScrollViewerStyle}"
                        VerticalScrollBarVisibility="Hidden">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentHost" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly" />
                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ComboBoxEditable Template  *********************************  -->
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Rectangle
                x:Name="normal"
                Grid.ColumnSpan="2"
                Fill="{StaticResource ComboBoxBackgroundBrush}"
                Stroke="{StaticResource ComboBoxBorderBrush}"
                StrokeThickness="1" />
            <Rectangle
                x:Name="hover"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Fill="{StaticResource ComboBoxHoverBackgroundBrush}"
                Stroke="{StaticResource ComboBoxHoverBorderBrush}"
                StrokeThickness="1"
                Visibility="Collapsed" />
            <Popup
                x:Name="PART_Popup"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Margin="1"
                AllowsTransparency="true"
                IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                Placement="Bottom"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <Border
                    x:Name="DropDownBorder"
                    MinWidth="{Binding ActualWidth, ElementName=MainGrid}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                    HorizontalAlignment="Stretch"
                    Background="{StaticResource PopupBackgroundBrush}"
                    BorderBrush="{StaticResource PopupBorderBrush}"
                    BorderThickness="1"
                    CornerRadius="2">
                    <ScrollViewer x:Name="DropDownScrollViewer" Style="{StaticResource ScrollViewerStyle}">
                        <Grid RenderOptions.ClearTypeHint="Enabled">
                            <Canvas
                                Width="0"
                                Height="0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top">
                                <Rectangle
                                    x:Name="OpaqueRect"
                                    Width="{Binding ActualWidth, ElementName=DropDownBorder}"
                                    Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                    Fill="{Binding Background, ElementName=DropDownBorder}" />
                            </Canvas>
                            <ItemsPresenter
                                x:Name="ItemsPresenter"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>
            <ToggleButton
                Grid.Column="0"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource ComboBoxToggleButtonStyle}" />

            <TextBox
                x:Name="PART_EditableTextBox"
                Margin="0,0,31,0"
                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource ComboBoxEditableTextBoxStyle}" />
            <Rectangle
                x:Name="focused"
                Grid.ColumnSpan="2"
                Stroke="{StaticResource ComboBoxFocusedBorderBrush}"
                StrokeThickness="1"
                Visibility="Collapsed" />
            <Rectangle
                x:Name="disabled"
                Grid.ColumnSpan="2"
                Fill="{StaticResource ComboBoxDisabledBackgroundBrush}"
                Visibility="Collapsed" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hover" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="disabled" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="focused" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="FocusedDropDown">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="focused" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  *********************************  ComboBox Style  *********************************  -->
    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Padding" Value="6,1,0,3" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="FontFamily" Value="/Shared;Component/Fonts/#Lato" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ComboBoxBorderBrush}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="0" MinWidth="30" />
                        </Grid.ColumnDefinitions>
                        <Rectangle
                            x:Name="normal"
                            Grid.ColumnSpan="2"
                            Fill="{StaticResource ComboBoxBackgroundBrush}"
                            Stroke="{StaticResource ComboBoxBorderBrush}"
                            StrokeThickness="1" />
                        <Rectangle
                            x:Name="hover"
                            Grid.ColumnSpan="2"
                            Fill="{StaticResource ComboBoxHoverBackgroundBrush}"
                            Stroke="{StaticResource ComboBoxHoverBorderBrush}"
                            StrokeThickness="1"
                            Visibility="Collapsed" />
                        <Popup
                            x:Name="PART_Popup"
                            Grid.ColumnSpan="2"
                            Margin="1"
                            AllowsTransparency="true"
                            IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                            Placement="Bottom"
                            PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <Border
                                x:Name="DropDownBorder"
                                MinWidth="{Binding ActualWidth, ElementName=MainGrid}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                HorizontalAlignment="Stretch"
                                Background="{StaticResource PopupBackgroundBrush}"
                                BorderBrush="{StaticResource PopupBorderBrush}"
                                BorderThickness="1"
                                CornerRadius="2">
                                <ScrollViewer x:Name="DropDownScrollViewer" Style="{StaticResource ScrollViewerStyle}">
                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas
                                            Width="0"
                                            Height="0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Top">
                                            <Rectangle
                                                x:Name="OpaqueRect"
                                                Width="{Binding ActualWidth, ElementName=DropDownBorder}"
                                                Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                Fill="{Binding Background, ElementName=DropDownBorder}" />
                                        </Canvas>
                                        <ItemsPresenter
                                            x:Name="ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                        <ToggleButton
                            Grid.ColumnSpan="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource ComboBoxToggleButtonStyle}" />
                        <ContentControl
                            x:Name="contentControl"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Foreground="{TemplateBinding Foreground}"
                            IsHitTestVisible="false">
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ContentControl>
                        <Rectangle
                            x:Name="focused"
                            Grid.ColumnSpan="2"
                            Stroke="{StaticResource ComboBoxFocusedBorderBrush}"
                            StrokeThickness="1"
                            Visibility="Collapsed" />
                        <Rectangle
                            x:Name="disabled"
                            Grid.ColumnSpan="2"
                            Fill="{StaticResource ComboBoxDisabledBackgroundBrush}"
                            Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hover" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="contentControl"
                                            Storyboard.TargetProperty="Foreground"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="disabled" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="focused" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="focused" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
                            <Setter Property="Background" Value="{StaticResource ComboBoxBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                            <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                            <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  *********************************  TextBoxValidationToolTip Template  *********************************  -->
    <ControlTemplate x:Key="TextBoxValidationToolTipTemplate">
        <Grid
            x:Name="Root"
            Margin="5,0"
            Opacity="0"
            RenderTransformOrigin="0,0">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25" />
            </Grid.RenderTransform>
            <Border
                Margin="4,4,-4,-4"
                Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
                Opacity="0.02" />
            <Border
                Margin="3,3,-3,-3"
                Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
                Opacity="0.08" />
            <Border
                Margin="2,2,-2,-2"
                Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
                Opacity="0.15" />
            <Border
                Margin="1,1,-1,-1"
                Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
                Opacity="0.21" />
            <Border Background="{StaticResource ValidationErrorElement}" />
            <Border>
                <TextBlock
                    MaxWidth="250"
                    Margin="8,4,8,4"
                    Foreground="{StaticResource LightForegroundBrush}"
                    Text="{Binding Path=(Validation.Errors)/ErrorContent}"
                    TextWrapping="Wrap"
                    UseLayoutRounding="false" />
            </Border>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                        <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="xform"
                                    Storyboard.TargetProperty="X"
                                    To="0"
                                    Duration="0:0:0.2">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".3" EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation
                                    Storyboard.TargetName="Root"
                                    Storyboard.TargetProperty="Opacity"
                                    To="1"
                                    Duration="0:0:0.2" />
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="Root"
                                Storyboard.TargetProperty="Opacity"
                                To="0"
                                Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="xform"
                                Storyboard.TargetProperty="X"
                                To="0"
                                Duration="0" />
                            <DoubleAnimation
                                Storyboard.TargetName="Root"
                                Storyboard.TargetProperty="Opacity"
                                To="1"
                                Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <!--  *********************************  TextBox Style  *********************************  -->
    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="FontFamily" Value="/Shared;Component/Fonts/#Lato" />
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Padding" Value="6,3" />
        <Setter Property="SelectionBrush" Value="{StaticResource TextBoxFocusedBrush}" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource TextBoxValidationToolTipTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid x:Name="RootElement" SnapsToDevicePixels="True">
                        <Border
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Opacity="1">
                            <Grid>
                                <Border
                                    x:Name="ReadOnlyVisualElement"
                                    Background="{StaticResource TextBoxReadOnlyBackgroundBrush}"
                                    Opacity="0" />
                                <ScrollViewer
                                    x:Name="PART_ContentHost"
                                    Padding="{TemplateBinding Padding}"
                                    BorderThickness="0"
                                    IsTabStop="False" />
                            </Grid>
                        </Border>
                        <Border
                            x:Name="DisabledVisualElement"
                            Background="{StaticResource DisabledVisualElement}"
                            BorderBrush="{StaticResource DisabledVisualElement}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            IsHitTestVisible="False"
                            Opacity="0" />
                        <Border
                            x:Name="FocusVisualElement"
                            BorderBrush="{StaticResource TextBoxFocusedBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            IsHitTestVisible="False"
                            Opacity="0" />
                        <Border
                            x:Name="ValidationErrorElement"
                            BorderBrush="{StaticResource ValidationErrorElement}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip
                                    x:Name="validationTooltip"
                                    DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                    Placement="Right"
                                    PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                    Template="{StaticResource TextBoxValidationToolTipTemplate}" />
                            </ToolTipService.ToolTip>
                            <Grid
                                Width="12"
                                Height="12"
                                Margin="1,-4,-4,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Background="Transparent">
                                <Path
                                    Margin="1,3,0,0"
                                    Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                                    Fill="{StaticResource ValidationErrorElement}" />
                                <Path
                                    Margin="1,3,0,0"
                                    Data="M 0,0 L2,0 L 8,6 L8,8"
                                    Fill="{StaticResource LightForegroundBrush}" />
                            </Grid>
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="BorderBrush"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Background"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="DisabledVisualElement"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ReadOnlyVisualElement"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusVisualElement"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusVisualElement"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <system:Boolean>True</system:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Label Style  *********************************  -->
    <Style x:Key="LabelStyle" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="/Shared;Component/Fonts/#Lato" />
        <Setter Property="FontSize" Value="13.333" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
    </Style>

    <!--  *********************************  RepeatButton Style  *********************************  -->
    <Style x:Key="RepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="FontFamily" Value="/Shared;Component/Fonts/#Lato" />
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Padding" Value="10,0,10,2" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid SnapsToDevicePixels="True">
                        <Rectangle
                            x:Name="Bd"
                            Fill="{StaticResource ButtonBackgroundBrush}"
                            Stroke="{StaticResource ButtonBorderBrush}"
                            StrokeThickness="1" />
                        <ContentControl
                            x:Name="ContentControl"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <Rectangle
                            x:Name="FocusedVisualElement"
                            Stroke="{StaticResource ButtonPressedBorderBrush}"
                            StrokeThickness="2"
                            Visibility="Collapsed" />
                        <Rectangle
                            x:Name="DisabledVisualElement"
                            Fill="{StaticResource DisabledVisualElement}"
                            Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentControl" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="ContentControl"
                                            Storyboard.TargetProperty="Foreground"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ********************************** GridSplitter Style **********************************  -->
    <Style x:Key="GridSplitterStyle" TargetType="{x:Type GridSplitter}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource GridSplitterBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource GridSplitterBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="PreviewStyle">
            <Setter.Value>
                <Style TargetType="Control">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Fill="{StaticResource GridSplitterPressedBackgroundBrush}" Opacity="0.8" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border
                            x:Name="border"
                            MinWidth="8"
                            MinHeight="8"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <StackPanel
                                    x:Name="HGrip"
                                    Height="8"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Orientation="Vertical">
                                    <Rectangle
                                        Width="20"
                                        Height="1"
                                        Margin="1,2,1,1"
                                        Fill="{StaticResource GlyphBackgroundBrush}"
                                        StrokeThickness="0" />
                                    <Rectangle
                                        Width="20"
                                        Height="1"
                                        Margin="1,1,1,2"
                                        Fill="{StaticResource GlyphBackgroundBrush}"
                                        StrokeThickness="0" />
                                </StackPanel>
                                <StackPanel
                                    x:Name="VGrip"
                                    Width="8"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Orientation="Horizontal"
                                    Visibility="Collapsed">
                                    <Rectangle
                                        Width="1"
                                        Height="20"
                                        Margin="2,1,1,1"
                                        Fill="{StaticResource GlyphBackgroundBrush}"
                                        StrokeThickness="0" />
                                    <Rectangle
                                        Width="1"
                                        Height="20"
                                        Margin="1,1,2,1"
                                        Fill="{StaticResource GlyphBackgroundBrush}"
                                        StrokeThickness="0" />
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HorizontalAlignment" Value="Stretch">
                            <Setter TargetName="HGrip" Property="Visibility" Value="Visible" />
                            <Setter TargetName="VGrip" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="VerticalAlignment" Value="Stretch">
                            <Setter TargetName="VGrip" Property="Visibility" Value="Visible" />
                            <Setter TargetName="HGrip" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource GridSplitterHoverBackgroundBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource GridSplitterHoverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource GridSplitterFocusedBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ********************************** ProgressBar Style **********************************  -->
    <Style x:Key="ProgressBarStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{StaticResource ProgressBarForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource ProgressBarBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot" SnapsToDevicePixels="true">
                        <Border
                            x:Name="ProgressBarTrack"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle x:Name="PART_Track" Margin="{TemplateBinding BorderThickness}" />
                        <Decorator
                            x:Name="PART_Indicator"
                            Margin="{TemplateBinding BorderThickness}"
                            HorizontalAlignment="Left">
                            <Grid x:Name="Foreground">
                                <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" />
                            </Grid>
                        </Decorator>
                        <Grid x:Name="IndeterminateRoot" Visibility="Collapsed">
                            <Rectangle
                                x:Name="IndeterminateSolidFill"
                                Margin="{TemplateBinding BorderThickness}"
                                Fill="{TemplateBinding Foreground}"
                                Opacity="1"
                                RenderTransformOrigin="0.5,0.5"
                                StrokeThickness="0" />
                            <Rectangle
                                x:Name="IndeterminateGradientFill"
                                Margin="{TemplateBinding BorderThickness}"
                                Fill="{StaticResource ProgressBarIndeterminateBackgroundBrush}"
                                StrokeThickness="1" />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimation
                                            Storyboard.TargetName="IndeterminateGradientFill"
                                            Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.Transform).(TransformGroup.Children)[0].X"
                                            From="0"
                                            To="20"
                                            Duration="00:00:.5" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="TemplateRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter TargetName="Indicator" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="IndeterminateRoot" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="false" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ********************************** PasswordBox Style **********************************  -->
    <Style x:Key="PasswordBoxStyle" TargetType="{x:Type PasswordBox}">
        <Setter Property="FontFamily" Value="/Shared;Component/Fonts/#Lato" />
        <Setter Property="FontSize" Value="13.333" />
        <Setter Property="Foreground" Value="{StaticResource PasswordBoxForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="6,4" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="SelectionBrush" Value="{StaticResource TextBoxFocusedBrush}" />
        <Setter Property="PasswordChar" Value="●" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="FlowDirection" Value="LeftToRight" />
        <Setter Property="CaretBrush" Value="{StaticResource CaretForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid>
                        <Border
                            x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                        <Border
                            x:Name="DisabledVisualElement"
                            Background="{StaticResource DisabledVisualElement}"
                            BorderBrush="{StaticResource DisabledVisualElement}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            IsHitTestVisible="False"
                            Opacity="0" />
                        <Border
                            x:Name="ReadOnlyVisualElement"
                            Background="{StaticResource TextBoxReadOnlyBackgroundBrush}"
                            Opacity="0" />
                        <Border>
                            <ScrollViewer x:Name="PART_ContentHost" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource TextBoxHoverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource TextBoxFocusedBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ToolTip Style  *********************************  -->
    <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FontFamily" Value="/Shared;Component/Fonts/#Lato" />
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource TooltipBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TooltipBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="10,7" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Grid>
                        <Rectangle
                            Fill="{TemplateBinding Background}"
                            Stroke="{TemplateBinding BorderBrush}"
                            StrokeThickness="{TemplateBinding BorderThickness}" />
                        <StackPanel Orientation="Horizontal" d:LayoutOverrides="Width, Height">
                            <ContentPresenter Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" />
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Expander Right Style  *********************************  -->
    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="{StaticResource TransparentBrush}" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Rectangle
                                    x:Name="rectangle"
                                    Width="30"
                                    Height="30"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Fill="{StaticResource ExpanderButtonBackgroundBrush}"
                                    Stroke="{StaticResource ExpanderButtonBorderBrush}" />
                                <Path
                                    x:Name="arrow"
                                    Width="10"
                                    Height="6"
                                    Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "
                                    Fill="{StaticResource GlyphBackgroundBrush}"
                                    RenderTransformOrigin="0.5, 0.5"
                                    Stretch="Fill" />
                            </Grid>
                            <ContentPresenter
                                Grid.Row="1"
                                Margin="0,4,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Stretch"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="Data" Value="M3.4,-4.4 L6.8,3.9 3.9566912E-07,3.9 z" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="rectangle" Property="Fill" Value="{StaticResource ExpanderButtonHoverBackgroundBrush}" />
                            <Setter TargetName="rectangle" Property="Stroke" Value="{StaticResource ExpanderButtonHoverBorderBrush}" />
                            <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ExpanderArrowHoverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="rectangle" Property="Fill" Value="{StaticResource ExpanderButtonPressedBackgroundBrush}" />
                            <Setter TargetName="rectangle" Property="Stroke" Value="{StaticResource ExpanderButtonPressedBorderBrush}" />
                            <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ExpanderArrowPressedBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Expander Up Style  *********************************  -->
    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="{StaticResource TransparentBrush}" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Rectangle
                                    x:Name="rectangle"
                                    Width="30"
                                    Height="30"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Fill="{StaticResource ExpanderButtonBackgroundBrush}"
                                    Stroke="{StaticResource ExpanderButtonBorderBrush}" />
                                <Path
                                    x:Name="arrow"
                                    Width="10"
                                    Height="6"
                                    Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "
                                    Fill="{StaticResource GlyphBackgroundBrush}"
                                    RenderTransformOrigin="0.5, 0.5"
                                    Stretch="Fill" />
                            </Grid>
                            <ContentPresenter
                                Grid.Column="1"
                                Margin="4,0,0,0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="Data" Value="M3.4,-4.4 L6.8,3.9 3.9566912E-07,3.9 z" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="rectangle" Property="Fill" Value="{StaticResource ExpanderButtonHoverBackgroundBrush}" />
                            <Setter TargetName="rectangle" Property="Stroke" Value="{StaticResource ExpanderButtonHoverBorderBrush}" />
                            <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ExpanderArrowHoverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="rectangle" Property="Fill" Value="{StaticResource ExpanderButtonPressedBackgroundBrush}" />
                            <Setter TargetName="rectangle" Property="Stroke" Value="{StaticResource ExpanderButtonPressedBorderBrush}" />
                            <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ExpanderArrowPressedBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Expander Left Style  *********************************  -->
    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="{StaticResource TransparentBrush}" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Rectangle
                                    x:Name="rectangle"
                                    Width="30"
                                    Height="30"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Fill="{StaticResource ExpanderButtonBackgroundBrush}"
                                    Stroke="{StaticResource ExpanderButtonBorderBrush}" />
                                <Path
                                    x:Name="arrow"
                                    Width="10"
                                    Height="6"
                                    Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "
                                    Fill="{StaticResource GlyphBackgroundBrush}"
                                    RenderTransformOrigin="0.5, 0.5"
                                    Stretch="Fill" />
                            </Grid>
                            <ContentPresenter
                                Grid.Row="1"
                                Margin="0,4,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Stretch"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="Data" Value="M3.4,-4.4 L6.8,3.9 3.9566912E-07,3.9 z" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="rectangle" Property="Fill" Value="{StaticResource ExpanderButtonHoverBackgroundBrush}" />
                            <Setter TargetName="rectangle" Property="Stroke" Value="{StaticResource ExpanderButtonHoverBorderBrush}" />
                            <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ExpanderArrowHoverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="rectangle" Property="Fill" Value="{StaticResource ExpanderButtonPressedBackgroundBrush}" />
                            <Setter TargetName="rectangle" Property="Stroke" Value="{StaticResource ExpanderButtonPressedBorderBrush}" />
                            <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ExpanderArrowPressedBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Expander Down Style  *********************************  -->
    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="{StaticResource TransparentBrush}" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Rectangle
                                x:Name="rectangle"
                                Width="30"
                                Height="30"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Fill="{StaticResource ExpanderButtonBackgroundBrush}"
                                Stroke="{StaticResource ExpanderButtonBorderBrush}" />
                            <Path
                                x:Name="arrow"
                                Width="10"
                                Height="6"
                                Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "
                                Fill="{StaticResource GlyphBackgroundBrush}"
                                RenderTransformOrigin="0.5, 0.5"
                                Stretch="Fill" />
                            <ContentPresenter
                                Grid.Column="1"
                                Margin="4,0,0,0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="Data" Value="M3.4,-4.4 L6.8,3.9 3.9566912E-07,3.9 z" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="rectangle" Property="Fill" Value="{StaticResource ExpanderButtonHoverBackgroundBrush}" />
                            <Setter TargetName="rectangle" Property="Stroke" Value="{StaticResource ExpanderButtonHoverBorderBrush}" />
                            <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ExpanderArrowHoverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="rectangle" Property="Fill" Value="{StaticResource ExpanderButtonPressedBackgroundBrush}" />
                            <Setter TargetName="rectangle" Property="Stroke" Value="{StaticResource ExpanderButtonPressedBorderBrush}" />
                            <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ExpanderArrowPressedBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Expander Style  *********************************  -->
    <Style x:Key="ExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="FontFamily" Value="/Shared;Component/Fonts/#Lato" />
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="Background" Value="{StaticResource ExpanderBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3"
                        SnapsToDevicePixels="true">
                        <DockPanel>
                            <ToggleButton
                                x:Name="HeaderSite"
                                MinWidth="0"
                                MinHeight="0"
                                Margin="1"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                DockPanel.Dock="Top"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                FontStretch="{TemplateBinding FontStretch}"
                                FontStyle="{TemplateBinding FontStyle}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource ExpanderDownHeaderStyle}" />
                            <ContentPresenter
                                x:Name="ExpandSite"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                DockPanel.Dock="Bottom"
                                Focusable="false"
                                Visibility="Collapsed" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderRightHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderUpHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ExpanderDisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ToggleButton Style  *********************************  -->
    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FontFamily" Value="/Shared;Component/Fonts/#Lato" />
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Padding" Value="10,0,10,2" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Rectangle
                            x:Name="Bd"
                            Fill="{StaticResource ButtonBackgroundBrush}"
                            Stroke="{StaticResource ButtonBorderBrush}"
                            StrokeThickness="1" />
                        <Rectangle
                            x:Name="checked"
                            Fill="{StaticResource ButtonPressedBackgroundBrush}"
                            Stroke="{StaticResource ButtonPressedBorderBrush}"
                            StrokeThickness="1"
                            Visibility="Collapsed" />
                        <ContentControl
                            x:Name="contentControl"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <ContentControl
                            x:Name="contentControl1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Foreground="{StaticResource ForegroundBrush}"
                            Visibility="Collapsed">
                            <ContentPresenter x:Name="contentPresenter1" />
                        </ContentControl>
                        <Rectangle
                            x:Name="FocusedVisualElement"
                            Stroke="{StaticResource ButtonPressedBorderBrush}"
                            StrokeThickness="2"
                            Visibility="Collapsed" />
                        <Rectangle
                            x:Name="DisabledVisualElement"
                            Fill="{StaticResource DisabledVisualElement}"
                            Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="contentControl"
                                            Storyboard.TargetProperty="Foreground"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="contentControl"
                                            Storyboard.TargetProperty="Foreground"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="checked" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentControl1" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="contentControl1"
                                            Storyboard.TargetProperty="Foreground"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ListBoxItem Style  *********************************  -->
    <Style x:Key="ListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="FontFamily" Value="/Shared;Component/Fonts/#Lato" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Padding" Value="6,2" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid>
                        <Rectangle x:Name="Bd" Fill="{TemplateBinding Background}" />
                        <Rectangle
                            x:Name="BgSelected"
                            Fill="{StaticResource ListBoxItemSelectedBackgroundBrush}"
                            Stroke="{StaticResource ListBoxItemSelectedBorderBrush}"
                            Visibility="Collapsed" />
                        <ContentControl
                            x:Name="contentControl"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <ContentControl
                            x:Name="contentControl1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Foreground="{StaticResource ForegroundBrush}"
                            Visibility="Collapsed">
                            <ContentPresenter x:Name="contentPresenter1" />
                        </ContentControl>
                        <Rectangle
                            x:Name="FocusedVisualElement"
                            IsHitTestVisible="False"
                            Stroke="{StaticResource ListBoxItemPressedBorderBrush}"
                            StrokeThickness="2"
                            Visibility="Collapsed" />
                        <Rectangle
                            x:Name="DisabledVisualElement"
                            Fill="{StaticResource DisabledVisualElement}"
                            Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentControl" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BgSelected" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentControl1" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="contentControl1"
                                            Storyboard.TargetProperty="Foreground"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BgSelected" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentControl1" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="contentControl1"
                                            Storyboard.TargetProperty="Foreground"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ********************************** CheckBoxStyle **********************************  -->
    <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="FontFamily" Value="/Shared;Component/Fonts/#Lato" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="6,0,0,0" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Fill="{StaticResource TransparentBrush}" />
                        <Rectangle
                            x:Name="normal"
                            Width="18"
                            Height="18"
                            Fill="{StaticResource CheckBoxBackgroundBrush}"
                            Opacity="1"
                            Stroke="{StaticResource CheckBoxBorderBrush}"
                            StrokeThickness="1" />
                        <Rectangle
                            x:Name="hover"
                            Width="18"
                            Height="18"
                            Fill="{StaticResource CheckBoxHoverBackgroundBrush}"
                            Opacity="0"
                            Stroke="{StaticResource CheckBoxHoverBorderBrush}"
                            StrokeThickness="1" />
                        <Rectangle
                            x:Name="pressed"
                            Width="18"
                            Height="18"
                            Fill="{StaticResource CheckBoxPressedBackgroundBrush}"
                            Opacity="0"
                            Stroke="{StaticResource CheckBoxPressedBorderBrush}"
                            StrokeThickness="1" />
                        <Rectangle
                            x:Name="focused"
                            Width="18"
                            Height="18"
                            Fill="{StaticResource CheckBoxFocusedBackgroundBrush}"
                            Opacity="0"
                            Stroke="{StaticResource CheckBoxFocusedBorderBrush}"
                            StrokeThickness="1" />
                        <Rectangle
                            x:Name="invalidUnfocused"
                            Width="18"
                            Height="18"
                            Fill="{StaticResource CheckBoxInvalidUnfocusedBackgroundBrush}"
                            Opacity="0"
                            Stroke="{StaticResource CheckBoxInvalidUnfocusedBackgroundBrush}"
                            StrokeThickness="1" />
                        <Rectangle
                            x:Name="invalidFocused"
                            Width="18"
                            Height="18"
                            Fill="{StaticResource CheckBoxInvalidFocusedBackgroundBrush}"
                            Opacity="0"
                            Stroke="{StaticResource CheckBoxInvalidFocusedBorderBrush}"
                            StrokeThickness="1" />
                        <Path
                            x:Name="checkBox"
                            Width="12"
                            Height="10"
                            Data="M 1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 1138,434.5538330078125 1141.482177734375,438 1141.482177734375,438 1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.607177734375,430 1145.607177734375,430 z"
                            Fill="{StaticResource CheckBoxCheckBackgroundBrush}"
                            Opacity="0"
                            Stretch="Fill"
                            UseLayoutRounding="False" />
                        <Rectangle
                            x:Name="IndeterminateCheck"
                            Width="8"
                            Height="3"
                            Fill="{StaticResource CheckBoxIndeterminateCheckBackgroundBrush}"
                            Opacity="0" />
                        <Rectangle
                            x:Name="disabled"
                            Width="18"
                            Height="18"
                            Fill="{StaticResource DisabledVisualElement}"
                            Opacity="0"
                            StrokeThickness="1" />
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="hover"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="pressed"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="contentPresenter"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To=".55"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="disabled"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="checkBox"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="IndeterminateCheck"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="focused"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="invalidUnfocused"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="invalidFocused"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ********************************** RadioButton Style **********************************  -->
    <Style x:Key="RadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="FontFamily" Value="/Shared;Component/Fonts/#Lato" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="6,0,0,0" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="18" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Margin="-6,0" Fill="{StaticResource TransparentBrush}" />
                        <Ellipse
                            x:Name="normal"
                            Width="18"
                            Height="18"
                            Fill="{StaticResource RadioButtonBackgroundBrush}"
                            Opacity="1"
                            Stroke="{StaticResource RadioButtonBorderBrush}"
                            StrokeThickness="1" />
                        <Ellipse
                            x:Name="hover"
                            Width="18"
                            Height="18"
                            Fill="{StaticResource RadioButtonHoverBackgroundBrush}"
                            Opacity="0"
                            Stroke="{StaticResource RadioButtonHoverBorderBrush}"
                            StrokeThickness="1" />
                        <Ellipse
                            x:Name="pressed"
                            Width="18"
                            Height="18"
                            Fill="{StaticResource RadioButtonPressedBackgroundBrush}"
                            Opacity="0"
                            Stroke="{StaticResource RadioButtonPressedBorderBrush}"
                            StrokeThickness="1" />
                        <Ellipse
                            x:Name="focused"
                            Width="18"
                            Height="18"
                            Fill="{StaticResource RadioButtonFocusedBackgroundBrush}"
                            Opacity="0"
                            Stroke="{StaticResource RadioButtonFocusedBorderBrush}"
                            StrokeThickness="1" />
                        <Ellipse
                            x:Name="invalidUnfocused"
                            Width="18"
                            Height="18"
                            Fill="{StaticResource RadioButtonInvalidUnfocusedBackgroundBrush}"
                            Opacity="0"
                            Stroke="{StaticResource RadioButtonInvalidUnfocusedBorderBrush}"
                            StrokeThickness="1" />
                        <Ellipse
                            x:Name="invalidFocused"
                            Width="18"
                            Height="18"
                            Fill="{StaticResource RadioButtonInvalidFocusedBackgroundBrush}"
                            Opacity="0"
                            Stroke="{StaticResource RadioButtonInvalidFocusedBorderBrush}"
                            StrokeThickness="1" />
                        <Ellipse
                            x:Name="Checked1"
                            Width="10"
                            Height="10"
                            Fill="{StaticResource RadioButtonCheckBackgroundBrush}"
                            Opacity="0" />
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <Ellipse
                            x:Name="disabled"
                            Width="18"
                            Height="18"
                            Fill="{StaticResource DisabledVisualElement}"
                            Opacity="0"
                            StrokeThickness="1" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="hover"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="pressed"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="contentPresenter"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To=".55"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="disabled"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Checked1"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="focused"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="invalidUnfocused"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="invalidFocused"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ********************** Implicit Styles ***********************  -->
    <Style BasedOn="{StaticResource ScrollBarStyle}" TargetType="{x:Type ScrollBar}" />
    <Style BasedOn="{StaticResource ButtonStyle}" TargetType="{x:Type Button}" />
    <Style BasedOn="{StaticResource ComboBoxStyle}" TargetType="{x:Type ComboBox}" />
    <Style BasedOn="{StaticResource ComboBoxItemStyle}" TargetType="{x:Type ComboBoxItem}" />
    <Style BasedOn="{StaticResource TextBoxStyle}" TargetType="{x:Type TextBox}" />
    <Style BasedOn="{StaticResource ListBoxItemStyle}" TargetType="{x:Type ListBoxItem}" />
    <Style BasedOn="{StaticResource CheckBoxStyle}" TargetType="CheckBox">
        <!--  Adding setter for VerticalContentAlignment to target default behavior of MS check box.  -->
        <Setter Property="VerticalContentAlignment" Value="Top" />
    </Style>
    <Style BasedOn="{StaticResource RadioButtonStyle}" TargetType="{x:Type RadioButton}" />
    <Style BasedOn="{StaticResource LabelStyle}" TargetType="{x:Type Label}" />

    <Style BasedOn="{StaticResource GridSplitterStyle}" TargetType="{x:Type GridSplitter}" />
    <Style BasedOn="{StaticResource ProgressBarStyle}" TargetType="{x:Type ProgressBar}" />
    <Style BasedOn="{StaticResource PasswordBoxStyle}" TargetType="{x:Type PasswordBox}" />
    <Style BasedOn="{StaticResource ExpanderStyle}" TargetType="{x:Type Expander}" />
    <Style BasedOn="{StaticResource ToggleButtonStyle}" TargetType="{x:Type ToggleButton}" />

    <!--  ReSharper restore Xaml.MissingGridIndex  -->
</ResourceDictionary>